#BlueJ class context
comment0.params=s
comment0.target=Game(int)
comment1.params=
comment1.target=void\ run()
comment1.text=\r\n\ run\ the\ game\r\n
comment10.params=creature
comment10.target=void\ removeCreatureFromSpot(Creature)
comment10.text=\r\n\ remove\ the\ creature\ from\ the\ spot\ from\ its\ current\ location\r\n\ @param\ <creature>\r\n
comment11.params=
comment11.target=int[]\ findRandomSpot()
comment11.text=\r\n\ pick\ a\ randomly\ spot\ which\ is\ empty\ in\ the\ world\r\n\ @return\ <this\ spot>\r\n
comment12.params=steps
comment12.target=void\ userRequest(int)
comment12.text=\r\n\ get\ the\ user\ input,\ default\ is\ 1,\ let\ the\ game\ go\ to\ next\ round\r\n\ @param\ <steps>\r\n
comment13.params=
comment13.target=void\ nextRound()
comment13.text=\r\n\ after\ user\ input\ the\ steps,\ to\ game\ will\ fo\ the\ next\ round\ by\ computing\ the\ creature's\ movement\r\n
comment14.params=
comment14.target=void\ snarksRound()
comment14.text=\r\n\ find\ all\ snarks,\ and\ let\ them\ move\ first\r\n
comment15.params=
comment15.target=void\ grumpkinsRound()
comment15.text=\r\n\ find\ all\ grumpkins,\ and\ let\ them\ move\r\n
comment16.params=creature\ row\ col
comment16.target=void\ creatureMotion(AbstractCreature,\ int,\ int)
comment16.text=\r\n\ get\ movement\ request\ for\ creatures,\ lock\ them\ after\ their\ turn\r\n\ @param\ <creature>\r\n\ @param\ <row>\r\n\ @param\ <col>\r\n
comment17.params=
comment17.target=void\ unlockAllCreatures()
comment17.text=\r\n\ after\ this\ round\ finished,\ all\ creatures\ should\ be\ unlocked\ for\ the\ next\ round\r\n\ unlock\ function\ is\ to\ make\ sure\ that\ a\ creature\ move\ or\ eat\ and\ go\ to\ the\ right\ or\ down\ spot,\r\n\ the\ system\ will\ let\ them\ move\ agian\ when\ the\ loop\ goes\ to\ those\ spot\r\n
comment18.params=newSpot
comment18.target=boolean\ isSurroundingEmpty(int[])
comment18.text=\r\n\ get\ the\ y\ and\ x,\ make\ sure\ the\ spot\ is\ valid\r\n\ @param\ <new\ spot>\r\n\ @return\ <true\ if\ the\ spot\ is\ not\ outside\ of\ the\ world\ or\ occupied>\r\n
comment19.params=newSpot
comment19.target=boolean\ hasGrumpkinNear(int[])
comment19.text=\r\n\ get\ the\ y\ and\ x,\ make\ sure\ there\ is\ grumpkin\ to\ eat\r\n\ @param\ <new\ spot>\r\n\ @return\ <true\ if\ the\ spot\ is\ not\ outside\ of\ the\ world\ or\ empty>\r\n
comment2.params=
comment2.target=void\ gameLoaded()
comment2.text=\r\n\ start\ the\ game,\ load\ all\ function\r\n
comment20.params=oneAxis
comment20.target=boolean\ isInBound(int)
comment20.text=\r\n\ check\ if\ the\ new\ spot\ is\ outside\ of\ world\r\n\ @param\ <oneAxis\:\ y\ or\ x\ axis>\r\n\ @return\ <true\ if\ the\ spot\ is\ inside\ of\ world>\r\n
comment21.params=
comment21.target=boolean\ isAllDie()
comment21.text=\r\n\ to\ make\ sure\ if\ there\ is\ at\ least\ one\ creature\ alive\r\n\ @return\ <true\ if\ all\ creatures\ are\ dead>\r\n
comment22.params=
comment22.target=int[]\ getCount()
comment22.text=\r\n\ collect\ all\ the\ population\ number\ and\ step\r\n\ interface\ class\ will\ use\ it\ present\ to\ user\r\n\ @return\ <an\ array\ of\ those\ information>\r\n
comment3.params=
comment3.target=void\ clear()
comment3.text=Clear\ the\ gamegrid\ --\ reset\ to\ have\ no\ creatures.
comment4.params=
comment4.target=void\ display()
comment4.text=\ Display\ the\ grid.\ You\ will\ need\ to\ add\ to\ this,\ but\ this\ is\ \r\n\ the\ basic\ idea.\ \r\n
comment5.params=
comment5.target=void\ initialGame()
comment5.text=\r\n\ generate\ the\ creatures\ into\ the\ world\r\n
comment6.params=spot
comment6.target=void\ generateOneGrumpkin(int[])
comment6.text=\r\n\ generate\ a\ new\ grumpkin\ on\ the\ map\r\n\ @param\ <spot>\r\n
comment7.params=spot
comment7.target=void\ generateOneSnark(int[])
comment7.text=\r\n\ generate\ a\ new\ snark\ on\ the\ map\r\n\ @param\ <spot>\r\n
comment8.params=spot\ creature
comment8.target=void\ repositonCreature(int[],\ Creature)
comment8.text=\r\n\ when\ creature\ is\ moved\ or\ ate\ something,\ it\ should\ go\ to\ new\ spot\ in\ the\ world\r\n\ when\ move,\ there\ are\ two\ steps\:\r\n\ 1.move\ to\ new\ spot\ in\ the\ world\r\n\ 2.update\ the\ creature's\ location\r\n\ in\ this\ case,\ to\ move\ to\ new\ spot\ should\ happen\ before\ update\ creaure's\ location\r\n\ because\ system\ will\ know\ the\ old\ one\ and\ set\ the\ old\ spot\ to\ null\r\n\ @param\ <spot\:\ new\ spot>\r\n\ @param\ <creature>\r\n
comment9.params=creature\ spot
comment9.target=void\ repositonCreature(Creature,\ int[])
comment9.text=\r\n\ Overloading\ function\r\n\ to\ remove\ previous\ spot\ of\ this\ snark\ after\ it\ ate,\ and\ decrease\ the\ population\ of\ grumpkins\r\n\ @param\ <creature>\r\n\ @param\ <spot>\r\n
numComments=23
